	---
Maven NAR Plugin
	---
	---
Mark Donszelmann
	---
	
HelloWorld Examples

	These example contain a simple C method "sayHello". This method can be called from a C program, a Java program, put into
a static library, put into a shared library, use a third party library, ...
There are also some unit test which are run and call the same method. 

	The following examples are available:

  	[executable] A C routine.
  
  	[executable-static] A C routine statically linked with the C-runtime library.

	[]

	[jni] A C routine called from Java.
	
	[java-dep-jni] A java project which depends on "jni". 

	[jni-static] A C routine called from Java statically linked with the C-runtime library.
	
	[jni-3rdparty] A third party JNI library called from Java.
	The third party library is the "jni" from the example above and is added as resource to the project in the 
	form of a JNI library and a corresponding jar file. The "jni" lib is currently provided for the following
	platforms:
	
	* x86_64-MacOSX-g++
	
	[]
	
	[]

	[lib-shared] A C routine which gets archived into a shared library. A C test executable 
	is created.
	
	[helloworldsharedlibexe] A C executable which depends on "helloworldsharedlib" and links dynamically 
	with it. The executable is created and run.
	
	[helloworldsharedlibjni] A C routine called from Java, which depends on 
	"helloworldsharedlib" and links dynamically with it.
	
	[]

	[lib-static] A C routine which gets archived into a static library. A C test executable 
	is created.
	
	[helloworldstaticlibexe] A C executable which depends on "helloworldstaticlib" and links statically 
	with it. The executabe is created and run. 

	[helloworldstaticlibjni] A C routine called from Java, which depends on 
	"helloworldstaticlib" and links statically with it. A Java unit test is provided.
	
	[]

	These examples are now all run as integration tests when you try to run maven on the maven-nar-plugin from its top-level directory with the profile "run-its".


